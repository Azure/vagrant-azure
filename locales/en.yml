en:
  vagrant_azure:
    launching_instance: |-
      Launching an instance with the following settings...
    not_created: |-
      The machine does not exist. Please run `vagrant up` first.
    will_not_destroy: |-
      The machine '%{name}' will not be destroyed as the user declined confirmation.
    already_status: |-
      The machine is already %{status}.
    stopping: |-
      Stopping '%{name}' in '%{group}'
    terminating: |-
      Terminating '%{name}'
    terminated: |-
      Terminated '%{name}'
    rdp_not_ready: |-
      RDP not ready
    starting: |-
      VM '%{name}' is starting
    started: |-
      VM '%{name}' has been started
    stopping: |-
      VM '%{name}' is stopping
    stopped: |-
      VM '%{name}' has been stopped
    restarting: |-
      VM '%{name}' is restarting
    restarted: |-
      VM '%{name}' has been restarted
    copy_folder: |-
      Copying folder: %{hostpath} ==>
      %{guestpath}
    rsync_not_found_warning: |-
      Warning! Folder sync disabled because the rsync binary is missing in the %{side}.
      Make sure rsync is installed and the binary can be found in the PATH.
    waiting_for_comm: |-
      Waiting for Communication
    comm_ready: |-
      Communication is Ready
    read_attempt: |-
     Failed to connect to Virtual Machine. Re-Connecting %{attempt}
    errors:
      win_rm_not_ready: |-
        Vagrant failed to communicate to the VM using powershell. The operation failed
        with the following message.
        %{message}
      server_not_created: |-
        Server not created. Error is: %{message}
      create_vm_failure: |-
        There was some error in creating the VM.
      failed_starting: |-
        Failed to start VM '%{name}'!!
      failed_stopping: |-
        Failed to stopping VM '%{name}'!!
    subscription_id:
      required: |-
        You must provide an Azure Subscription Id either through ENV['AZURE_SUBSCRIPTION_ID'] or via Vagrantfile.
    mgmt_endpoint:
      required: |-
        You must provide a non-nil Azure Management Endpoint either through ENV['AZURE_MANAGEMENT_ENDPOINT'] or via Vagrantfile.
    auth:
      required: |-
        You must provide Azure Active Directory Tenant ID, Application Client ID and Application Client Secret via ENV or Vagrantfile.
    states:
      short_not_created: |-
        not created
      long_not_created: |-
        The Azure instance is not created. Run `vagrant up` to create it.
      short_stopped: |-
        stopped
      short_starting: |-
        starting
      short_started: |-
        started
      long_stopped: |-
        The Azure instance is stopped. Run `vagrant up` to start it.
      short_stopping: |-
        stopping
      long_stopping: |-
        The Azure instance is stopping. Wait until is completely stopped to
        run `vagrant up` and start it.
      short_pending: |-
        pending
      long_pending: |-
        The Azure instance is pending a start (i.e. this is a transition state).
      short_running: |-
        running
      long_running: |-
        The Azure instance is running. To stop this machine, you can run
        `vagrant halt`. To destroy the machine, you can run `vagrant destroy`.
      short_pending: |-
        pending
      long_pending: |-
        The Azure instance is still being initialized. To destroy this machine,
        you can run `vagrant destroy`.
    waiting_for_ssh: |-
      Waiting for SSH to become available...
    waiting_for_winrm: |-
      Waiting for WinRM to become available...
    ready: |-
      Machine is booted and ready for use!
    public_key_path_private_key: |-
      We expect the public key to be added to the Azure VM to be located at the
      same place as the config.ssh.private_key_path + '.pub'. We couldn't find
      any public keys for these private key paths:
    private_key_not_specified: |-
      Please specify a secure key to use with config.ssh.private_key_path
      (see: https://www.vagrantup.com/docs/vagrantfile/ssh_settings.html).
      If not, you publicly accessible Azure VM will be extremely insecure.
    too_many_tcp_endpoints: |-
      There are '%{count}' TCP Endpoints (Inbound Security Rules) specified for the NetworkSecurityGroup, which is too many. 
      There can be a max of 3963 (4096 - 133, where 133 is where we start as priority for custom rule #1, and so forth)
      (see: https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg#Nsg-rules)
    unknown_type_as_tcp_endpoints: |-
      Unrecognized setting '%{input}' as TCP Endpoints (Inbounds Security Rules), expected an array, string or positive number.
    waiting_for_ready: |-
      Waiting for instance to become "ready"...
    waiting_for_stop: |-
      Waiting for instance to become "stopped"...
    custom_image_os_error:
      If you provide a custom image, you must provide the operating system for the image (vm_operating_system).
    vhd_and_managed_image_error:
      Specifying both vm_vhd_uri and vm_managed_image_id is not supported. Please specify one or the other.
    manage_image_id_format_error:
      The vm_managed_image_id doesn't fit the expected format, plese verify it looks like '/subscriptions/{sub_id}/resourceGroups/{group_name}/providers/Microsoft.Compute/images/{image_name}'
