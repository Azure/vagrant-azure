{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "defaultValue": "vagrant",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    <% if operating_system == 'Windows' %>
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine (only used on Windows)"
      }
    },
    <% else %>
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    <% end %>
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "nsgLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Network Security Group Label Prefix for the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Name of the VM"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "vagrant-subnet",
      "metadata": {
        "description": "Name of the subnet"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "vagrantVNET",
      "metadata": {
        "description": "Name of the virtual network"
      }
    },
    "winRmPort": {
      "type": "int",
      "defaultValue": 5986,
      "metadata": {
        "description": "WinRM port"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "Storage account type for VM Disks"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "managedImageName": "[concat(parameters('vmName'), '-vagrantanagedImage')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "nicName": "[concat(parameters('vmName'), '-vagrantNIC')]",
    "publicIPAddressName": "[concat(parameters('vmName'), '-vagrantPublicIP')]",
    "publicIPAddressType": "Dynamic",
    "networkSecurityGroupName": "[concat(parameters('nsgLabelPrefix'), '-vagrantNSG')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "apiVersion": "2015-06-15",
    "singleQuote": "'",
    "doubleQuote": "\""
  },
  "resources": [
    <% if vhd_uri %>
      <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/import_vhd_image.json", {
        name: "[variables('managedImageName')]",
        account_type: "[parameters('storageAccountType')]",
        os_type: "#{operating_system}",
        source_uri: "#{vhd_uri}"
      }) + "," %>
    <% end %>
    <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/network_security_group.json", self) + "," %>
    <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/public_ip_address.json", self) + "," %>
    <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/virtual_network.json", self) + "," %>
    <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/network_interface.json", self) + "," %>
    <% if availability_set_name %>
      <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/availability_set.json", availability_set_name: availability_set_name) + "," %>
    <% end %>

    <%
      vm_dependencies = ["[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"]
      if availability_set_name
        vm_dependencies.push("[resourceId('Microsoft.Compute/availabilitySets', '#{availability_set_name}')")
      end

      if vhd_uri
        vm_dependencies.push("[resourceId('Microsoft.Compute/images', variables('managedImageName'))]")
      end
    %>
    <%= VagrantPlugins::Azure::Util::TemplateRenderer.render("arm/resources/virtual_machine.json",
                                                              {
                                                                depends_on: vm_dependencies,
                                                                storage_account_type: "[parameters('storageAccountType')]"
                                                              }.merge(self.to_h))
    %>
  ]
}
